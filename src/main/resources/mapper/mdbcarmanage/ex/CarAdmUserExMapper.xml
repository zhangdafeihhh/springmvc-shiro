<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.mdbcarmanage.ex.CarAdmUserExMapper" >
  <resultMap id="BaseResultMap" type="com.zhuanche.entity.mdbcarmanage.CarAdmUser" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="account_type" property="accountType" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="cities" property="cities" jdbcType="VARCHAR" />
    <result column="suppliers" property="suppliers" jdbcType="VARCHAR" />
    <result column="team_id" property="teamId" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="group_ids" property="groupIds" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
      <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_id, account, user_name, password, role_id, account_type, status, remark, create_user, 
    create_date, cities, suppliers, team_id, phone, group_ids,level,email,create_user_id
  </sql>
  
  <!-- 根据账户查询 -->
  <select id="queryByAccount" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from car_adm_user
    where account = #{account} 
    limit 1
  </select>
  
  <!-- 查询用户列表 -->
  <select id="queryUsers" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from car_adm_user
    where 1=1 
    <if test="userIds!=null and userIds.size()>0">
	    and user_id in 
		<foreach collection="userIds" open="(" close=")" separator="," item="uid">
			#{uid}
		</foreach>
    </if>
    <if test="account!=null">
 		and account = #{account} 
    </if>
    <if test="userName!=null">
    	and user_name like #{userName} ESCAPE '/' 
    </if>
    <if test="phone!=null">
    	and phone = #{phone}
    </if>
    <if test="status!=null">
    	and status = #{status}
    </if>
    order by user_id
  </select>

    <!-- 供应商查询用户列表 -->
    <select id="supplierQueryUsers" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from car_adm_user
        where account_type != 1000
        <if test="userIds!=null and userIds.size()>0">
            and user_id in
            <foreach collection="userIds" open="(" close=")" separator="," item="uid">
                #{uid}
            </foreach>
        </if>
        <if test="account!=null">
            and account = #{account}
        </if>
        <if test="userName!=null">
            and user_name like #{userName} ESCAPE '/'
        </if>
        <if test="phone!=null">
            and phone = #{phone}
        </if>
        <if test="status!=null">
            and status = #{status}
        </if>

        <if test="createUserId != null" >
            AND create_user_id  = #{createUserId}
        </if>
        order by user_id
    </select>


  <!-- 查询所有的登录账号名称 -->
  <select id="queryAccountsOfUsers" resultType="java.lang.String">
    select account from car_adm_user where account is not null 
    and user_id in 
	<foreach collection="userIds" open="(" close=")" separator="," item="uid">
		#{uid}
	</foreach>
  </select>

  <select id="selectUsersByIdList" resultMap="BaseResultMap" parameterType="java.util.List">
    select
    user_id,user_name
    from car_adm_user
    where
    user_id in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

  <select id="queryUserPermissionInfo" resultMap="BaseResultMap">
    SELECT
	  user_id,
	  user_name,
	  account,
	  phone,
	  cities,
	  suppliers,
	  team_id,
	  group_ids,
	  LEVEL
    FROM
	car_adm_user
	where user_id = #{userId}
  </select>


   <select id="selectUsersByLevel" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select user_id,user_name,cities, suppliers, team_id, phone
        from car_adm_user
        where 1=1
        <if test="level!=null">
            and level = #{level}
        </if>


   </select>

    <select id="queryIdListByName" resultType="java.lang.Integer" parameterType="java.lang.String">
        select user_id
        from car_adm_user
        where 1=1
        <if test="userName!=null">
            and locate (#{userName} , car_adm_user.user_name) > 0
        </if>

    </select>

    <select id="queryNameById" resultType="string" parameterType="integer">
        select user_name
          from car_adm_user
        where user_id = #{userId}
    </select>


    <select id="queryByPhone" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from car_adm_user
        where phone = #{phone} limit 1
    </select>


    <update id="updateEmail" >
        update car_adm_user  SET  email = #{email}

        where user_id = #{userId,jdbcType=INTEGER}
    </update>

    <select id="queryAllAccountByPhone" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from car_adm_user
        where phone = #{phone} and status = 200
    </select>


</mapper>