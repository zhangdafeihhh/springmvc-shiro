<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zhuanche.dao.RoleDao">
    <resultMap id="resultMap" type="com.zhuanche.entity.Role" >
        <id column="ID" property="id" jdbcType="BIGINT" />
        <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR"/>
        <result column="ROLE_CODE" property="roleCode" jdbcType="VARCHAR"/>
        <collection property="permissions" ofType="com.zhuanche.entity.Permission" >
            <id column="rolePermissionId" property="id" jdbcType="BIGINT"/>
            <result column="PERMISSION_NAME" property="permissionName" jdbcType="VARCHAR"/>
            <result column="PERMISSION_CODE" property="permissionCode" jdbcType="VARCHAR"/>
        </collection>
    </resultMap>
    <sql id="Base_Column_List" >
        ID,ROLE_NAME,ROLE_CODE
    </sql>

    <select id="findByIdAndPermission" parameterType="java.lang.Long" resultMap="resultMap">
        select b.ID,b.ROLE_NAME,b.ROLE_CODE,cp.ID as rolePermissionId ,cp.PERMISSION_NAME,cp.PERMISSION_CODE
        from crm_role b
        inner join crm_role_permission m on b.id=m.rid
        inner join crm_permission cp on m.pid=cp.id
        where b.id=#{id}
    </select>

    <select id="findByIds" parameterType="java.lang.Long" resultMap="resultMap">
        select * from crm_role b inner join crm_role_permission m
        on b.id=m.rid inner join crm_permission c on m.pid=c.id where b.id in #{ids}
    </select>

    <select id="search" resultMap="resultMap" parameterType="map">
        select <include refid="Base_Column_List"/>
        from crm_role where 1=1
        <if test="roleName != null and roleName !=''">
            AND ROLE_NAME like CONCAT(#{roleName},'%')
        </if>
        <if test="roleCode != null and roleCode !=''">
            AND ROLE_CODE = #{roleCode}
        </if>
        limit #{pageNo},#{pageSize}
    </select>

    <insert id="insert" parameterType="com.zhuanche.entity.Role" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
        insert into crm_role (<include refid="Base_Column_List"/>)
        values (#{id,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR})
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.zhuanche.entity.Role">
        update crm_role
        <set>
            <if test="roleName != null">
                ROLE_NAME = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleCode != null">
                ROLE_CODE = #{roleCode,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zhuanche.entity.Role">
        update crm_role
        set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
        ROLE_CODE = #{roleCode,jdbcType=VARCHAR}
        where ID = #{id,jdbcType=INTEGER}
    </update>

    <select id="findByRoleCode" parameterType="java.lang.String" resultMap="resultMap">
        select <include refid="Base_Column_List" />
        FROM  crm_role where ROLE_CODE  = #{roleCode}
    </select>

    <select id="findById" parameterType="java.lang.Long" resultMap="resultMap">
        select <include refid="Base_Column_List" />
        from crm_role
        where id=#{id}
    </select>


    <select id="findAllRole" resultMap="resultMap">
        select <include refid="Base_Column_List" /> FROM crm_role
    </select>

    <select id="selectWithPermission" parameterType="java.lang.Long" resultMap="resultMap">
        SELECT r.*,p.id AS rolePermissionId, p.permission_code, p.permission_name, p.PARENT_ID,
        pa.id AS parent_id,pa.permission_code AS parent_permission_code,
        pa.permission_name AS parent_permission_name
        FROM crm_role r
        LEFT JOIN crm_role_permission rp ON rp.rid = r.id
        LEFT JOIN crm_permission p ON p.id = rp.pid
        LEFT JOIN crm_permission pa ON p.PARENT_ID = pa.id
        WHERE r.id = #{id}
    </select>
</mapper>